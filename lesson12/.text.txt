Это проверка базовых знаний пройденного вами материала. Задания здесь, как правило, направлены на закрепление навыков и использование их на практике. Справившись с этим уровнем, вам по силам станут задачи, по типу рассмотренных на уроке. Большинство реальных проектов можно решить, правильно комбинируя эти навыки. Это задание необходимо выполнить для получения документов о прохождении курса (только если Вы не планируете выполнять PRO или ULTRA PRO уровни, тогда Lite необязательно). Дежурные кураторы ответят вам на все вопросы, которые касаются данного уровня ДЗ.
0. Познакомится с описанием систем
https://docs.google.com/document/d/1I1Q2Mqg7PsYrkMNOdogLBoGKeyoq34-dfJQrUtbBOEM/edit?usp=sharing - github api
https://docs.google.com/document/d/1jpVzAey3YjtcPI_ujMkVRvC-JKxJAo8bsHyixpfqRnE/edit?usp=sharing - hh api
1. Выбрать одну из 2-х система какая более интересна, скорее всего с hh будет проще. В hh больше аналитики, в github больше работы с текстом;
2. Реализовать систему. Результатом будет код парсера + файл или несколько файлов с полученными данными;
3. Сдать проект в виде ссылки на репозиторий + приложить итоговые файлы".

-----------------------------------------------------------------------------------
Назначение системы
Система будет определять и классифицировать репозитории с небезопасным кодом на github (работа с github api)

Принцип работы системы 
Программа получает код из репозиториев по ключевым словам основные это python, django, но возможно в будущем добавятся и другие java, c#, flask, …

После того как найдены репозитории каждый мы проверяем на наличие небезопасного кода. Если такой код найден, сохраняем информацию в следующем виде:

Ссылка на репозиторий
Ключевые слова
Ссылка на модуль с кодом в котором есть небезопасный код
Тип небезопасного кода
Статус

(Подсказка) На гитхабе так же есть возможность вести поиск не по репозиториям, а сразу по коду, возможно это будет удобнее

Также можно добавить дополнительную информацию например строчку с кодом и все что может быть полезно

Возможные статусы кода: 1) Потенциально опасен 2) Содержит уязвимость

Примерное описание по поиску небезопасного кода:

* - отмечена усложненная аналитика

В любых проектах на python

В коде есть функция eval (потенциально опасен)
* В коде есть функция eval на вход она принимает данные из стороннего источника (например input, из файла, по сети) (Содержит уязвимость)
В коде есть sql инъекция. Определить можно следующим образом внутри f строки или строки format есть sql-запрос, например select (Потенциально опасен)
* Этот запрос после выполняется в базе данных (например есть import sqlite3, …) (Содержит уязвимость)
В коде используется модуль pickle (Потенциально опасен)
* В функцию pickle.load передаются данные из стороннего источника (например input, чтение из файла, по сети) (Содержит уязвимость)
* в коде в явном виде указаны login-и и пароли (например от email или от какой либо системы) (Содержит уязвимость)

В проектах на django
Явно указаны пароли от email в файле settings.py в константах EMAIL_HOST_USER, EMAIL_HOST_PASSWORD (Содержит уязвимость)
Отключен csrf token. В settings.py в константе MIDDLEWARE_CLASSES  отстутствует 'django.middleware.csrf.CsrfViewMiddleware' или он закоменчен (Потенциально опасен)
* локально отключен csrf token. В коде проекта используется декоратор @csrf_exempt (Потенциально опасен)

Примеры небезопасного кода можно найти тут: https://github.com/DanteOnline/unsafe-python-code/tree/master
         
Все пункты делать не обязательно на зачет достаточно 1-го любого пункта, на максимально баллов 3-х пунктов. Также можно добавить какие то еще условия небезопасного кода

После того как данные получены сохранить их в файл в формате json. Пример итогового файла:

{
   'https://github.com/DanteOnline/nu-loto-resolve-dz': {
       'words': ['python', 'django'],
       'unsafe_modules': [
           {
               'name': 'main.py',
               'unsafe code type': 'В коде используется eval',
               'status': 'Потенциально опасен'
           },
           {
               'name': 'other.py',
               'unsafe code type': 'явно указаны логин и пароль',
               'status': 'Содержит уязвимость'
           },
       ]
   },
   'https://github.com/DanteOnline/nu-loto-resolve-111': {
       'words': ['python'],
       'unsafe_modules': [
           {
               'name': 'net.py',
               'unsafe code type': 'sql иньекция',
               'status': 'Потенциально опасен'
           },
       ]
   }
}
