
Парсинг HTML
Python
Python-разработчик
Описание занятия
Видео:
 

 

Дополнительные материалы:
Код с занятия: https://github.com/DanteOnline/nu14-parsehtml
Beautifulsoup установка и быстрый старт https://pypi.org/project/beautifulsoup4/
Beautifulsoup официальная документация https://www.crummy.com/software/BeautifulSoup/bs4/doc/
Requests авторизация https://requests.readthedocs.io/en/master/user/authentication/
Заголовки которые отправляет браузер хром https://o7planning.org/ru/11631/how-to-view-http-headers-in-google-chrome
Scrapy фреймворк для парсинга https://scrapy.org/
Задание Pro
Задание Pro
Макс 10 баллов
Это более сложные задания, которые помогут лучше отработать практические навыки из пройденного материала. Этот уровень позволяет поработать с усложненными кейсами, которые могут встретиться вам в реальных задачах. Для выполнения здесь уже не всегда достаточно использовать «шаблон» занятия, тут нужно побыть непосредственно программистом - придумать своё решение, поискать информацию в сети Интернет или нашей Базе Знаний. Но успех в работе уже будет Вашим личным полноценным опытом преодоления трудностей. Выполнение данного уровня ДЗ необязательно для получения документов о прохождении курса(если есть выполненные LITE или ULTRA PRO уровни). Дежурные кураторы ответят вам на все вопросы, которые касаются данного уровня ДЗ. Но не предоставят вам явные решения или готовый код. Наша задача - подготовить Вас к полноценной, реальной работе, поэтому помощь на этом уровне заключается в наводящих вопросах, разъяснении материала направлении общего хода Ваших действий.
Создание html парсера
0. Создать новый проект (так же может быть кто то захочет добавить функционал в проект с api)
1. Задание максимально творческое поэтому можно выбрать любую тему и любой сайт
2. Придумать какие данные вы хотите получить (например новости, новые машины, товары, скидки, ...) Желательно не слишком сложные для начала 2-5 показателей
Примеры:
Новости: тема, дата, текст
Новые машины: марка, класс, стоимость, ...
Товары: название, цена, описание, ...
Скидки: размер, название, магазин, ...
3. Выбрать сайт где есть эти данные
4. Написать парсер для получения этих данных
5. Результат работы парсера можно сохранить в файл (несколько файлов) либо выводить в терминал
6. Для тех кто ничего не выберет предлагаю следующие варианты:
- сайт https://stackoverflow.com/ - поиск небезопасного кода аналогично заданию с api
- сайт https://hh.ru/ поиск вакансий аналогично заданию с api (в api ограничение на 2000 вакансий, тут можно получить все)
- сайт https://pythondigest.ru/ - новости о python на определенную тему