Это более сложные задания, которые помогут лучше отработать практические навыки из пройденного материала. Этот уровень позволяет поработать с усложненными кейсами, которые могут встретиться вам в реальных задачах. Для выполнения здесь уже не всегда достаточно использовать «шаблон» занятия, тут нужно побыть непосредственно программистом - придумать своё решение, поискать информацию в сети Интернет или нашей Базе Знаний. Но успех в работе уже будет Вашим личным полноценным опытом преодоления трудностей. Выполнение данного уровня ДЗ необязательно для получения документов о прохождении курса(если есть выполненные LITE или ULTRA PRO уровни). Дежурные кураторы ответят вам на все вопросы, которые касаются данного уровня ДЗ. Но не предоставят вам явные решения или готовый код. Наша задача - подготовить Вас к полноценной, реальной работе, поэтому помощь на этом уровне заключается в наводящих вопросах, разъяснении материала направлении общего хода Ваших действий.
0. В проекте flask добавить новую ветку
1. Спроектировать структуру таблиц для своих данных (сколько будет таблиц, какие, как связаны между собой, какие типы полей) 
2. Создать базу данных (используем Sqlite) 
3. Создать в базе спроектированные таблицы
4. Написать скрипты для заполнения базы данных данными и выборки данных из базы, возможны 2 варианта:
 
 
1) более простой - использовать просто какие то тестовые данные, сохранить их в базу и после этого сделать выборку этих данных и вывести в терминал.
2) более сложный - использовать реальные данные, которые получил парсер, сохранить эти данные в созданную базу, сделать выборку данных либо в консольном варианте программы, либо вывести на сайт (идеальный вариант)
 
5. Сдать дз в виде ссылки на пулл реквест, созданную базу данных пока тоже загрузить на гитхаб (обычно база не загружается в репозиторий
 
Важное примечание!
При работает с flask возможно будет ошибка связанная с потоками - SQLite objects created in a thread can only be used in that same thread
Для того чтобы это решить, при подключении указывается check_same_thread=False
sqlite3.connect('my_sb', check_same_thread=False, ...)